name: validation

on:
  push:
  schedule:
    - cron: "0 0 * * *"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - id: set-matrix
        name: Fetch list of repositories
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/metabolicatlas/memote-docker:0.13
          options: -v ${{ github.workspace }}:/project
          shell: bash
          run: |
            cd /project
            echo "matrix=$(python -c 'import runner; runner.matrix()')" >> $GITHUB_OUTPUT

  validate:
    needs: setup
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        gem: ${{ fromJSON(needs.setup.outputs.matrix) }}
      max-parallel: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Validate repository
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/metabolicatlas/memote-docker:0.13
          options: -v ${{ github.workspace }}:/project
          shell: bash
          run: |
            cd /project
            python -c 'import runner; runner.validate("${{ matrix.gem }}")'

      - name: Update branch
        run: git pull --ff

      - name: Auto-commit results
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: validation-bot
          commit_message: update validation results for ${{ matrix.gem }}
          file_pattern: results/*.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
